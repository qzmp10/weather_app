(()=>{"use strict";var n={426:(n,t,e)=>{e.d(t,{Z:()=>s});var a=e(537),o=e.n(a),r=e(645),i=e.n(r)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Open+Sans&display=swap);"]),i.push([n.id,"body {\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n    display: flex;\n    flex-direction: column;\n    background-image: url('https://img.le-dictionnaire.com/paysage-campagne.jpg');\n    color: white;\n    background-color: rgba(0, 0, 0, 0.363);\n    \n}\n\n.content {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: bold;\n    gap: 3rem;\n    font-size: 1.3rem;\n}\n\n.searchDiv {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.4rem;\n    text-shadow: black 0 0 10px;\n}\n\ninput {\n    border: solid 2px black;\n}\n\n.format-example {\n    font-size: 0.7rem;\n    font-style: italic;\n}\n\nbutton {\n    width: 20%;\n    align-self: center;\n}\n\n.dataDiv {\n    width: 52%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: solid 2px rgb(0, 0, 0);\n    background-color: rgba(255, 255, 255, 0.651);\n    border-radius: 0.8rem;\n    padding: 1rem;\n    color: rgb(0, 0, 0);\n\n}\n\nh2 {\n    text-shadow: black 0 0 10px;\n    margin-bottom: -1rem;\n    margin-top: 2rem;\n}\n\n.fa-solid {\n    font-size: 12rem;\n    text-shadow: rgb(0, 0, 0) 0 0 30px;\n    color:rgb(255, 255, 255);\n    margin-top: 5vh;\n    transition: all 400ms ease-in-out\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,YAAY;IACZ,aAAa;IACb,SAAS;IACT,oCAAoC;IACpC,aAAa;IACb,sBAAsB;IACtB,6EAA6E;IAC7E,YAAY;IACZ,sCAAsC;;AAE1C;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,sBAAsB;IACtB,iBAAiB;IACjB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,WAAW;IACX,2BAA2B;AAC/B;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,8BAA8B;IAC9B,4CAA4C;IAC5C,qBAAqB;IACrB,aAAa;IACb,mBAAmB;;AAEvB;;AAEA;IACI,2BAA2B;IAC3B,oBAAoB;IACpB,gBAAgB;AACpB;;AAEA;IACI,gBAAgB;IAChB,kCAAkC;IAClC,wBAAwB;IACxB,eAAe;IACf;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\n\nbody {\n    width: 100vw;\n    height: 100vh;\n    margin: 0;\n    font-family: 'Open Sans', sans-serif;\n    display: flex;\n    flex-direction: column;\n    background-image: url('https://img.le-dictionnaire.com/paysage-campagne.jpg');\n    color: white;\n    background-color: rgba(0, 0, 0, 0.363);\n    \n}\n\n.content {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    font-weight: bold;\n    gap: 3rem;\n    font-size: 1.3rem;\n}\n\n.searchDiv {\n    width: 60%;\n    display: flex;\n    flex-direction: column;\n    gap: 0.4rem;\n    text-shadow: black 0 0 10px;\n}\n\ninput {\n    border: solid 2px black;\n}\n\n.format-example {\n    font-size: 0.7rem;\n    font-style: italic;\n}\n\nbutton {\n    width: 20%;\n    align-self: center;\n}\n\n.dataDiv {\n    width: 52%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    border: solid 2px rgb(0, 0, 0);\n    background-color: rgba(255, 255, 255, 0.651);\n    border-radius: 0.8rem;\n    padding: 1rem;\n    color: rgb(0, 0, 0);\n\n}\n\nh2 {\n    text-shadow: black 0 0 10px;\n    margin-bottom: -1rem;\n    margin-top: 2rem;\n}\n\n.fa-solid {\n    font-size: 12rem;\n    text-shadow: rgb(0, 0, 0) 0 0 30px;\n    color:rgb(255, 255, 255);\n    margin-top: 5vh;\n    transition: all 400ms ease-in-out\n}\n\n"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",a=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),a&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),a&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,a,o,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);a&&i[d[0]]||(void 0!==r&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=r),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),t.push(d))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),r="/*# ".concat(o," */"),i=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[t].concat(i).concat([r]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,a=0;a<t.length;a++)if(t[a].identifier===n){e=a;break}return e}function a(n,a){for(var r={},i=[],s=0;s<n.length;s++){var c=n[s],l=a.base?c[0]+a.base:c[0],d=r[l]||0,A="".concat(l," ").concat(d);r[l]=d+1;var u=e(A),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var f=o(p,a);a.byIndex=s,t.splice(s,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var r=a(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=e(r[i]);t[s].references--}for(var c=a(n,o),l=0;l<r.length;l++){var d=e(r[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}r=c}}},569:n=>{var t={};n.exports=function(n,e){var a=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var a="";e.supports&&(a+="@supports (".concat(e.supports,") {")),e.media&&(a+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(a+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),a+=e.css,o&&(a+="}"),e.media&&(a+="}"),e.supports&&(a+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(a,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(a){var o=t[a];if(void 0!==o)return o.exports;var r=t[a]={id:a,exports:{}};return n[a](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var a in t)e.o(t,a)&&!e.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:t[a]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{var n=e(379),t=e.n(n),a=e(795),o=e.n(a),r=e(569),i=e.n(r),s=e(565),c=e.n(s),l=e(216),d=e.n(l),A=e(589),u=e.n(A),p=e(426),f={};f.styleTagTransform=u(),f.setAttributes=c(),f.insert=i().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),t()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;const m=document.querySelector(".weather-data"),h=document.querySelector(".city-data"),g=document.querySelector("#search_location"),C=(document.querySelector(".search"),document.querySelector(".description")),y=document.querySelector("#icon");async function v(){try{const n=await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${g.value}&limit=5&appid=899939d5ca4c4ea4b64de201ec8fde6f`,{mode:"cors"}),t=await n.json(),e=t[0].lat,a=t[0].lon,o=t[0].country;return{latitude:e,longitude:a,city:t[0].name,country:o}}catch(n){console.log(n)}}g.addEventListener("keypress",(n=>{"Enter"===n.key&&(y.className="",async function(){try{const n=await v(),t=n.city;if(""!==n.country){const e=n.country;h.textContent=`${t}, ${e}`}else h.textContent=`${t}`}catch(n){h.textContent="Error 404"}}(),async function(){try{const n=await async function(){try{const n=await v(),t=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${n.latitude}&lon=${n.longitude}&appid=899939d5ca4c4ea4b64de201ec8fde6f`);return await t.json()}catch(n){console.log(n)}}();console.log(n);const t=function(n){let t=n-273.15;return Math.round(t)}(n.main.temp),e=function(n){let t=1.8*(n-273.15)+32;return Math.round(t)}(n.main.temp);m.textContent=`${t} °C / ${e} ℉`,C.textContent=`${n.weather[0].description.charAt(0).toUpperCase()}${n.weather[0].description.slice(1)}`,"Clouds"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-cloud")):"Clear"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-sun")):"Rain"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-cloud-showers-heavy")):"Drizzle"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-cloud-rain")):"Snow"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-snowflake")):"Thunderstorm"===n.weather[0].main?(y.classList.add("fa-solid"),y.classList.add("fa-cloud-bolt")):(y.classList.add("fa-solid"),y.classList.add("fa-wind"))}catch(n){console.log(n),m.textContent="Error 404",C.textContent="Error 404"}}(),g.value="")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,