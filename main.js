(()=>{"use strict";const t=document.querySelector(".weather-data"),a=document.querySelector(".city-data"),e=document.querySelector("#search_location"),o=(document.querySelector(".search"),document.querySelector(".description")),n=document.querySelector("#icon");async function s(){try{const t=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${e.value}&limit=5&appid=899939d5ca4c4ea4b64de201ec8fde6f`,{mode:"cors"}),a=await t.json(),o=a[0].lat,n=a[0].lon,s=a[0].country;return{latitude:o,longitude:n,city:a[0].name,country:s}}catch(t){console.log(t)}}e.addEventListener("keypress",(c=>{"Enter"===c.key&&(icon.className="",async function(){try{const t=await s(),e=t.city;if(""!==t.country){const o=t.country;a.textContent=`${e}, ${o}`}else a.textContent=`${e}`}catch(t){a.textContent="Error 404"}}(),async function(){try{const a=await async function(){try{const t=await s(),a=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t.latitude}&lon=${t.longitude}&appid=899939d5ca4c4ea4b64de201ec8fde6f`);return await a.json()}catch(t){console.log(t)}}();console.log(a);const e=function(t){let a=t-273.15;return Math.round(a)}(a.main.temp),c=function(t){let a=1.8*(t-273.15)+32;return Math.round(a)}(a.main.temp);t.textContent=`${e} °C / ${c} ℉`,o.textContent=`${a.weather[0].description.charAt(0).toUpperCase()}${a.weather[0].description.slice(1)}`,"Clouds"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-cloud")):"Clear"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-sun")):"Rain"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-cloud-showers-heavy")):"Drizzle"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-cloud-rain")):"Snow"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-snowflake")):"Thunderstorm"===a.weather[0].main?(n.classList.add("fa-solid"),n.classList.add("fa-cloud-bolt")):(n.classList.add("fa-solid"),n.classList.add("fa-wind"))}catch(a){console.log(a),t.textContent="Error 404",o.textContent="Error 404"}}(),e.value="")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,