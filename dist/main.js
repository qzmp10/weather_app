(()=>{const t=document.querySelector(".weather-data"),e=document.querySelector(".city-data"),a=document.querySelector("#search_location");document.querySelector(".search").addEventListener("click",(()=>{!async function(){try{const c=await async function(){try{const t=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${a.value}&limit=5&appid=899939d5ca4c4ea4b64de201ec8fde6f`,{mode:"cors"}),e=await t.json(),c=e[0].lat,o=e[0].lon,n=e[0].country;return{latitude:c,longitude:o,city:e[0].name,country:n}}catch(t){console.log(t)}}(),o=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${c.latitude}&lon=${c.longitude}&appid=899939d5ca4c4ea4b64de201ec8fde6f`),n=await o.json(),r=c.city;if(""!==c.country){const t=c.country;e.textContent=`${r}, ${t}`}else e.textContent=`${r}`;t.textContent=`Temperature: ${n.main.temp} Kelvin`}catch(t){console.log(t)}}()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUFBQSxNQUFNQSxFQUFhQyxTQUFTQyxjQUFjLGlCQUNwQ0MsRUFBVUYsU0FBU0MsY0FBYyxjQUNqQ0UsRUFBZ0JILFNBQVNDLGNBQWMsb0JBQ3hCRCxTQUFTQyxjQUFjLFdBYS9CRyxpQkFBaUIsU0FBUyxNQWlCbkNDLGlCQUNJLElBQ0ksTUFBTUMsUUFsQmRELGlCQUNJLElBQ0ksTUFBTUUsUUFBaUJDLE1BQXdELGtEQUFHTCxFQUFjTSx1REFDaEcsQ0FBQ0MsS0FBTSxTQUNEQyxRQUFhSixFQUFTSSxPQUN0QkMsRUFBV0QsRUFBSyxHQUFHRSxJQUNuQkMsRUFBWUgsRUFBSyxHQUFHSSxJQUNwQkMsRUFBVUwsRUFBSyxHQUFHSyxRQUV4QixNQUFPLENBQUVKLFdBQVVFLFlBQVdHLEtBRGpCTixFQUFLLEdBQUdPLEtBQ2VGLFVBSXhDLENBSEUsTUFBT0csR0FDTEMsUUFBUUMsSUFBSUYsRUFFaEIsQ0FDSixDQUlxQ0csR0FDdkJDLFFBQWdCZixNQUN0Qix1REFBR0YsRUFBeUIsZ0JBQWVBLEVBQTBCLG9EQUMvREssUUFBYVksRUFBUVosT0FHckJNLEVBQU9YLEVBQXFCLEtBQ2xDLEdBQWlDLEtBQTlCQSxFQUF3QixRQUFTLENBQ2hDLE1BQU1VLEVBQVVWLEVBQXdCLFFBQ3hDSixFQUFRc0IsWUFBYyxHQUFHUCxNQUFZRCxHQUN6QyxNQUNJZCxFQUFRc0IsWUFBYyxHQUFHUCxJQUk3QmxCLEVBQVd5QixZQUE2QixnQkFBSWIsRUFBS2MsS0FBS0MsYUFJMUQsQ0FGRSxNQUFPUCxHQUNMQyxRQUFRQyxJQUFJRixFQUNoQixDQUNKLENBRUFRLEVBQVksRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXJfYXBwLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHdlYXRoZXJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2VhdGhlci1kYXRhJyk7XG5jb25zdCBjaXR5RGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNpdHktZGF0YScpO1xuY29uc3QgbG9jYXRpb25JbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNzZWFyY2hfbG9jYXRpb24nKTtcbmNvbnN0IHNlYXJjaEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2gnKTtcblxuLy8gYXN5bmMgZnVuY3Rpb24gZ2V0Q2l0eSgpIHtcbi8vICAgICB0cnkge1xuLy8gICAgICAgICBjb25zdCBjaXR5ID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2dlby8xLjAvZGlyZWN0P3E9TG9zIEFuZ2VsZXMmbGltaXQ9NSZhcHBpZD04OTk5MzlkNWNhNGM0ZWE0YjY0ZGUyMDFlYzhmZGU2ZicsIHttb2RlOiAnY29ycyd9KTtcbi8vICAgICAgICAgY29uc3QgbG9jYXRpb25EYXRhID0gYXdhaXQgY2l0eS5qc29uKCk7XG4vLyAgICAgICAgIGNvbnNvbGUubG9nKGxvY2F0aW9uRGF0YSk7XG4vLyAgICAgICAgIHdlYXRoZXJEaXYudGV4dENvbnRlbnQgPSBsb2NhdGlvbkRhdGFbMF0ubmFtZSArICcsICcgKyBsb2NhdGlvbkRhdGFbMF0uY291bnRyeTtcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgICBjb25zb2xlLmxvZyhlcnJvcilcbi8vICAgICB9XG4vLyB9XG5cbnNlYXJjaEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBhc3luYyBmdW5jdGlvbiBnZXRMb2NhdGlvbigpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2dlby8xLjAvZGlyZWN0P3E9JytgJHtsb2NhdGlvbklucHV0LnZhbHVlfWArJyZsaW1pdD01JmFwcGlkPTg5OTkzOWQ1Y2E0YzRlYTRiNjRkZTIwMWVjOGZkZTZmJywgXG4gICAgICAgICAgICB7bW9kZTogJ2NvcnMnfSlcbiAgICAgICAgICAgIGNvbnN0IGpzb24gPSBhd2FpdCBsb2NhdGlvbi5qc29uKCk7XG4gICAgICAgICAgICBjb25zdCBsYXRpdHVkZSA9IGpzb25bMF0ubGF0O1xuICAgICAgICAgICAgY29uc3QgbG9uZ2l0dWRlID0ganNvblswXS5sb247XG4gICAgICAgICAgICBjb25zdCBjb3VudHJ5ID0ganNvblswXS5jb3VudHJ5O1xuICAgICAgICAgICAgY29uc3QgY2l0eSA9IGpzb25bMF0ubmFtZTtcbiAgICAgICAgICAgIHJldHVybiB7IGxhdGl0dWRlLCBsb25naXR1ZGUsIGNpdHksIGNvdW50cnkgfTtcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcblxuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlcigpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGxvY2F0aW9uTGF0TG9uID0gYXdhaXQgZ2V0TG9jYXRpb24oKTtcbiAgICAgICAgICAgIGNvbnN0IHdlYXRoZXIgPSBhd2FpdCBmZXRjaCAoJ2h0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP2xhdD0nK1xuICAgICAgICAgICAgYCR7bG9jYXRpb25MYXRMb25bJ2xhdGl0dWRlJ119YCsnJmxvbj0nK2Ake2xvY2F0aW9uTGF0TG9uWydsb25naXR1ZGUnXX1gKycmYXBwaWQ9ODk5OTM5ZDVjYTRjNGVhNGI2NGRlMjAxZWM4ZmRlNmYnKTtcbiAgICAgICAgICAgIGNvbnN0IGpzb24gPSBhd2FpdCB3ZWF0aGVyLmpzb24oKTtcblxuICAgICAgICAgICAgLy90aGlzIGJsb2NrIGNvdWxkIGdvIGluIGFuIGFub3RoZXIgYXN5bmNocm9ub3VzIGZ1bmN0aW9uXG4gICAgICAgICAgICBjb25zdCBjaXR5ID0gbG9jYXRpb25MYXRMb25bJ2NpdHknXTtcbiAgICAgICAgICAgIGlmKGxvY2F0aW9uTGF0TG9uWydjb3VudHJ5J10gIT09ICcnKXtcbiAgICAgICAgICAgICAgICBjb25zdCBjb3VudHJ5ID0gbG9jYXRpb25MYXRMb25bJ2NvdW50cnknXTtcbiAgICAgICAgICAgICAgICBjaXR5RGl2LnRleHRDb250ZW50ID0gYCR7Y2l0eX1gK2AsICR7Y291bnRyeX1gO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjaXR5RGl2LnRleHRDb250ZW50ID0gYCR7Y2l0eX1gO1xuICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIHdlYXRoZXJEaXYudGV4dENvbnRlbnQgPSAnVGVtcGVyYXR1cmU6JytgICR7anNvbi5tYWluLnRlbXB9IEtlbHZpbmA7XG5cbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGdldFdlYXRoZXIoKTtcbn0pXG5cblxuIl0sIm5hbWVzIjpbIndlYXRoZXJEaXYiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjaXR5RGl2IiwibG9jYXRpb25JbnB1dCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhc3luYyIsImxvY2F0aW9uTGF0TG9uIiwibG9jYXRpb24iLCJmZXRjaCIsInZhbHVlIiwibW9kZSIsImpzb24iLCJsYXRpdHVkZSIsImxhdCIsImxvbmdpdHVkZSIsImxvbiIsImNvdW50cnkiLCJjaXR5IiwibmFtZSIsImVycm9yIiwiY29uc29sZSIsImxvZyIsImdldExvY2F0aW9uIiwid2VhdGhlciIsInRleHRDb250ZW50IiwibWFpbiIsInRlbXAiLCJnZXRXZWF0aGVyIl0sInNvdXJjZVJvb3QiOiIifQ==