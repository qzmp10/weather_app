(()=>{"use strict";const t=document.querySelector(".weather-data"),e=document.querySelector(".city-data"),a=document.querySelector("#search_location");async function c(){try{const t=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${a.value}&limit=5&appid=899939d5ca4c4ea4b64de201ec8fde6f`,{mode:"cors"}),e=await t.json(),c=e[0].lat,o=e[0].lon,n=e[0].country;return{latitude:c,longitude:o,city:e[0].name,country:n}}catch(t){console.log(t)}}document.querySelector(".search"),c(),async function(){try{const a=await c(),o=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${a.latitude}&lon=${a.longitude}&appid=899939d5ca4c4ea4b64de201ec8fde6f`),n=await o.json(),r=a.city;if(""!==a.country){const t=a.country;e.textContent=`${r}, ${t}`}else e.textContent=`${r}`;t.textContent=`Temperature: ${n.main.temp} Kelvin`}catch(t){console.log(t)}}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoibUJBQUEsTUFBTUEsRUFBYUMsU0FBU0MsY0FBYyxpQkFDcENDLEVBQVVGLFNBQVNDLGNBQWMsY0FDakNFLEVBQWdCSCxTQUFTQyxjQUFjLG9CQ0E3Q0csZUFBZUMsSUFDWCxJQUNJLE1BQU1DLFFBQWlCQyxNQUF3RCxrREFBR0osRUFBY0ssdURBQ2hHLENBQUNDLEtBQU0sU0FDREMsUUFBYUosRUFBU0ksT0FDdEJDLEVBQVdELEVBQUssR0FBR0UsSUFDbkJDLEVBQVlILEVBQUssR0FBR0ksSUFDcEJDLEVBQVVMLEVBQUssR0FBR0ssUUFFeEIsTUFBTyxDQUFFSixXQUFVRSxZQUFXRyxLQURqQk4sRUFBSyxHQUFHTyxLQUNlRixVQUl4QyxDQUhFLE1BQU9HLEdBQ0xDLFFBQVFDLElBQUlGLEVBRWhCLENBQ0osQ0RicUJsQixTQUFTQyxjQUFjLFdFRDVDSSxJRGtCQUQsaUJBQ0ksSUFDSSxNQUFNaUIsUUFBdUJoQixJQUN2QmlCLFFBQWdCZixNQUN0Qix1REFBR2MsRUFBeUIsZ0JBQWVBLEVBQTBCLG9EQUMvRFgsUUFBYVksRUFBUVosT0FHckJNLEVBQU9LLEVBQXFCLEtBQ2xDLEdBQWlDLEtBQTlCQSxFQUF3QixRQUFTLENBQ2hDLE1BQU1OLEVBQVVNLEVBQXdCLFFBQ3hDbkIsRUFBUXFCLFlBQWMsR0FBR1AsTUFBWUQsR0FDekMsTUFDSWIsRUFBUXFCLFlBQWMsR0FBR1AsSUFHN0JqQixFQUFXd0IsWUFBNkIsZ0JBQUliLEVBQUtjLEtBQUtDLGFBSTFELENBRkUsTUFBT1AsR0FDTEMsUUFBUUMsSUFBSUYsRUFDaEIsQ0FDSixDQ3RDQVEsRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYXRoZXJfYXBwLy4vc3JjL2RvbS5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyX2FwcC8uL3NyYy9hc3luY0Z1bmN0aW9ucy5qcyIsIndlYnBhY2s6Ly93ZWF0aGVyX2FwcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB3ZWF0aGVyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLndlYXRoZXItZGF0YScpO1xuY29uc3QgY2l0eURpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jaXR5LWRhdGEnKTtcbmNvbnN0IGxvY2F0aW9uSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2VhcmNoX2xvY2F0aW9uJyk7XG5jb25zdCBzZWFyY2hCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoJyk7XG5cbmV4cG9ydCB7IHdlYXRoZXJEaXYsIGNpdHlEaXYsIGxvY2F0aW9uSW5wdXQsIHNlYXJjaEJ1dHRvbn0iLCJpbXBvcnQgeyB3ZWF0aGVyRGl2LCBjaXR5RGl2LCBsb2NhdGlvbklucHV0LCBzZWFyY2hCdXR0b259IGZyb20gXCIuL2RvbVwiO1xuXG5hc3luYyBmdW5jdGlvbiBnZXRMb2NhdGlvbigpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBsb2NhdGlvbiA9IGF3YWl0IGZldGNoKCdodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9nZW8vMS4wL2RpcmVjdD9xPScrYCR7bG9jYXRpb25JbnB1dC52YWx1ZX1gKycmbGltaXQ9NSZhcHBpZD04OTk5MzlkNWNhNGM0ZWE0YjY0ZGUyMDFlYzhmZGU2ZicsIFxuICAgICAgICB7bW9kZTogJ2NvcnMnfSlcbiAgICAgICAgY29uc3QganNvbiA9IGF3YWl0IGxvY2F0aW9uLmpzb24oKTtcbiAgICAgICAgY29uc3QgbGF0aXR1ZGUgPSBqc29uWzBdLmxhdDtcbiAgICAgICAgY29uc3QgbG9uZ2l0dWRlID0ganNvblswXS5sb247XG4gICAgICAgIGNvbnN0IGNvdW50cnkgPSBqc29uWzBdLmNvdW50cnk7XG4gICAgICAgIGNvbnN0IGNpdHkgPSBqc29uWzBdLm5hbWU7XG4gICAgICAgIHJldHVybiB7IGxhdGl0dWRlLCBsb25naXR1ZGUsIGNpdHksIGNvdW50cnkgfTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XG5cbiAgICB9XG59O1xuXG5cblxuYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlcigpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBsb2NhdGlvbkxhdExvbiA9IGF3YWl0IGdldExvY2F0aW9uKCk7XG4gICAgICAgIGNvbnN0IHdlYXRoZXIgPSBhd2FpdCBmZXRjaCAoJ2h0dHBzOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP2xhdD0nK1xuICAgICAgICBgJHtsb2NhdGlvbkxhdExvblsnbGF0aXR1ZGUnXX1gKycmbG9uPScrYCR7bG9jYXRpb25MYXRMb25bJ2xvbmdpdHVkZSddfWArJyZhcHBpZD04OTk5MzlkNWNhNGM0ZWE0YjY0ZGUyMDFlYzhmZGU2ZicpO1xuICAgICAgICBjb25zdCBqc29uID0gYXdhaXQgd2VhdGhlci5qc29uKCk7XG5cbiAgICAgICAgLy90aGlzIGJsb2NrIGNvdWxkIGdvIGluIGFuIGFub3RoZXIgYXN5bmNocm9ub3VzIGZ1bmN0aW9uXG4gICAgICAgIGNvbnN0IGNpdHkgPSBsb2NhdGlvbkxhdExvblsnY2l0eSddO1xuICAgICAgICBpZihsb2NhdGlvbkxhdExvblsnY291bnRyeSddICE9PSAnJyl7XG4gICAgICAgICAgICBjb25zdCBjb3VudHJ5ID0gbG9jYXRpb25MYXRMb25bJ2NvdW50cnknXTtcbiAgICAgICAgICAgIGNpdHlEaXYudGV4dENvbnRlbnQgPSBgJHtjaXR5fWArYCwgJHtjb3VudHJ5fWA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjaXR5RGl2LnRleHRDb250ZW50ID0gYCR7Y2l0eX1gO1xuICAgICAgICB9XG5cbiAgICAgICAgd2VhdGhlckRpdi50ZXh0Q29udGVudCA9ICdUZW1wZXJhdHVyZTonK2AgJHtqc29uLm1haW4udGVtcH0gS2VsdmluYDtcblxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICB9XG59O1xuXG5leHBvcnQgeyBnZXRMb2NhdGlvbiwgZ2V0V2VhdGhlciB9IiwiaW1wb3J0IHsgZ2V0TG9jYXRpb24sIGdldFdlYXRoZXIgfSBmcm9tIFwiLi9hc3luY0Z1bmN0aW9uc1wiO1xuXG5nZXRMb2NhdGlvbigpXG5nZXRXZWF0aGVyKCk7XG5cblxuIl0sIm5hbWVzIjpbIndlYXRoZXJEaXYiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjaXR5RGl2IiwibG9jYXRpb25JbnB1dCIsImFzeW5jIiwiZ2V0TG9jYXRpb24iLCJsb2NhdGlvbiIsImZldGNoIiwidmFsdWUiLCJtb2RlIiwianNvbiIsImxhdGl0dWRlIiwibGF0IiwibG9uZ2l0dWRlIiwibG9uIiwiY291bnRyeSIsImNpdHkiLCJuYW1lIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibG9jYXRpb25MYXRMb24iLCJ3ZWF0aGVyIiwidGV4dENvbnRlbnQiLCJtYWluIiwidGVtcCIsImdldFdlYXRoZXIiXSwic291cmNlUm9vdCI6IiJ9